/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Controladores.ControladorCliente;
import Modelos.ModeloTicketsPendientes;
import Modelos.Ticket;
import java.awt.GridLayout;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.net.URL;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import tiquetico.Categorias;

/**
 *
 * @author Joaquín
 */
public class PanelCliente extends javax.swing.JFrame {
    private static PanelCliente INSTANCE = null;
    ModeloTicketsPendientes modeloTickets = new ModeloTicketsPendientes();

    /**
     * Creates new form PanelCliente
     */
    public PanelCliente() {
        this.setUndecorated(true);
        initComponents();
        ListaTicketsPendientes.setModel(modeloTickets);
        //this.setExtendedState(MAXIMIZED_BOTH);
    }
    
    
    /*Patron de diseño Singleton*/
    private synchronized static void createInstance(){
        if(INSTANCE == null){
            INSTANCE = new PanelCliente();
        }
    }
    
    public static PanelCliente getInstance(){
        createInstance();
        return INSTANCE;
    }
    
    /*Permite agregar el nombre del Usuario que se logeo en la aplicacion*/
    public void agregarUsuario(String usuario){
        txtNombreUsuario.setText(usuario);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelEmcabezadoCliente = new javax.swing.JLabel();
        btnCerrar = new javax.swing.JButton();
        PanelFondoClientes = new javax.swing.JPanel();
        PanelSemaforo = new javax.swing.JPanel();
        semaforoMedio = new javax.swing.JButton();
        semaforoArriba = new javax.swing.JButton();
        semaforoAbajo = new javax.swing.JButton();
        PanelClientes = new javax.swing.JPanel();
        labelUsuario = new javax.swing.JLabel();
        txtNombreUsuario = new javax.swing.JLabel();
        btnDesconectar = new javax.swing.JButton();
        TabbedPaneCliente = new javax.swing.JTabbedPane();
        TabPendientes = new javax.swing.JPanel();
        PanelDatos = new javax.swing.JPanel();
        idTicket = new javax.swing.JLabel();
        clienteId = new javax.swing.JLabel();
        asunto = new javax.swing.JLabel();
        Ingreso = new javax.swing.JLabel();
        txtPendienteIdTicket = new javax.swing.JLabel();
        txtPendienteClienteId = new javax.swing.JLabel();
        txtPendienteAsunto = new javax.swing.JLabel();
        txtPendienteIngreso = new javax.swing.JLabel();
        btnAtenderTicket = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ListaTicketsPendientes = new javax.swing.JList<>();
        jButton2 = new javax.swing.JButton();
        TabAtendiendo = new javax.swing.JPanel();
        PanelFormAtendiendo = new javax.swing.JPanel();
        labelTicketId = new javax.swing.JLabel();
        txtTicketId = new javax.swing.JLabel();
        labelClienteId = new javax.swing.JLabel();
        txtClienteId = new javax.swing.JLabel();
        labelAsunto = new javax.swing.JLabel();
        labelIngreso = new javax.swing.JLabel();
        txtFechaIngreso = new javax.swing.JLabel();
        labelAtencion = new javax.swing.JLabel();
        txtFechaAtencion = new javax.swing.JLabel();
        txtAsunto = new javax.swing.JLabel();
        btnLiberar = new javax.swing.JButton();
        btnResuelto = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextAreaComentario = new javax.swing.JTextArea();
        labelComentario = new javax.swing.JLabel();
        TabReportes = new javax.swing.JPanel();
        labelTicketResueltos = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel3 = new javax.swing.JLabel();
        txtTicketsResueltos = new javax.swing.JLabel();
        txtTicketsNoResueltos = new javax.swing.JLabel();
        txtTiempoPromedio = new javax.swing.JLabel();
        ScrollPaneReportes = new javax.swing.JScrollPane();
        PanelReportes = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelEmcabezadoCliente.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        labelEmcabezadoCliente.setForeground(new java.awt.Color(0, 153, 153));
        labelEmcabezadoCliente.setText("CLIENTE");

        btnCerrar.setFont(new java.awt.Font("Arial", 2, 10)); // NOI18N
        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconCerrar.jpg"))); // NOI18N
        btnCerrar.setText("CERRAR");
        btnCerrar.setBorder(null);
        btnCerrar.setBorderPainted(false);
        btnCerrar.setContentAreaFilled(false);
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        PanelFondoClientes.setBackground(new java.awt.Color(153, 153, 153));

        PanelSemaforo.setBackground(new java.awt.Color(255, 255, 255));

        semaforoMedio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconGris.png"))); // NOI18N
        semaforoMedio.setBorder(null);
        semaforoMedio.setBorderPainted(false);
        semaforoMedio.setContentAreaFilled(false);
        semaforoMedio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semaforoMedioActionPerformed(evt);
            }
        });

        semaforoArriba.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconRojo.jpg"))); // NOI18N
        semaforoArriba.setBorder(null);
        semaforoArriba.setBorderPainted(false);
        semaforoArriba.setContentAreaFilled(false);
        semaforoArriba.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                semaforoArribaMouseClicked(evt);
            }
        });

        semaforoAbajo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconGris.png"))); // NOI18N
        semaforoAbajo.setBorder(null);
        semaforoAbajo.setBorderPainted(false);
        semaforoAbajo.setContentAreaFilled(false);
        semaforoAbajo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semaforoAbajoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelSemaforoLayout = new javax.swing.GroupLayout(PanelSemaforo);
        PanelSemaforo.setLayout(PanelSemaforoLayout);
        PanelSemaforoLayout.setHorizontalGroup(
            PanelSemaforoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelSemaforoLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(PanelSemaforoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(semaforoAbajo)
                    .addComponent(semaforoMedio)
                    .addComponent(semaforoArriba))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        PanelSemaforoLayout.setVerticalGroup(
            PanelSemaforoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelSemaforoLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(semaforoArriba)
                .addGap(12, 12, 12)
                .addComponent(semaforoMedio, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(semaforoAbajo)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        PanelClientes.setBackground(new java.awt.Color(255, 255, 255));

        labelUsuario.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        labelUsuario.setText("USUARIO: ");

        txtNombreUsuario.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtNombreUsuario.setText("Nombre_Usuario");

        btnDesconectar.setText("DESCONECTAR");
        btnDesconectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesconectarActionPerformed(evt);
            }
        });

        TabbedPaneCliente.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        PanelDatos.setBackground(new java.awt.Color(255, 255, 255));
        PanelDatos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));

        idTicket.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        idTicket.setText("Ticket id:");

        clienteId.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        clienteId.setText("Cliente id:");

        asunto.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        asunto.setText("Asunto:");

        Ingreso.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Ingreso.setText("Ingreso: ");

        txtPendienteIdTicket.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtPendienteIdTicket.setText("#Ticket");

        txtPendienteClienteId.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtPendienteClienteId.setText("#Cliente");

        txtPendienteAsunto.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtPendienteAsunto.setText("Agregar Asunto");

        txtPendienteIngreso.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtPendienteIngreso.setText("Fecha_Ingreso");

        javax.swing.GroupLayout PanelDatosLayout = new javax.swing.GroupLayout(PanelDatos);
        PanelDatos.setLayout(PanelDatosLayout);
        PanelDatosLayout.setHorizontalGroup(
            PanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idTicket)
                    .addComponent(clienteId)
                    .addComponent(asunto)
                    .addComponent(Ingreso))
                .addGap(21, 21, 21)
                .addGroup(PanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPendienteIngreso)
                    .addComponent(txtPendienteAsunto)
                    .addComponent(txtPendienteClienteId)
                    .addComponent(txtPendienteIdTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        PanelDatosLayout.setVerticalGroup(
            PanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDatosLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(PanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idTicket)
                    .addComponent(txtPendienteIdTicket))
                .addGap(18, 18, 18)
                .addGroup(PanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clienteId)
                    .addComponent(txtPendienteClienteId))
                .addGap(18, 18, 18)
                .addGroup(PanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(asunto)
                    .addComponent(txtPendienteAsunto))
                .addGap(18, 18, 18)
                .addGroup(PanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ingreso)
                    .addComponent(txtPendienteIngreso))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        btnAtenderTicket.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnAtenderTicket.setForeground(new java.awt.Color(102, 102, 102));
        btnAtenderTicket.setText("ATENDER");
        btnAtenderTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtenderTicketActionPerformed(evt);
            }
        });

        ListaTicketsPendientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListaTicketsPendientesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ListaTicketsPendientes);

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TabPendientesLayout = new javax.swing.GroupLayout(TabPendientes);
        TabPendientes.setLayout(TabPendientesLayout);
        TabPendientesLayout.setHorizontalGroup(
            TabPendientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TabPendientesLayout.createSequentialGroup()
                .addGroup(TabPendientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addGroup(TabPendientesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(TabPendientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(TabPendientesLayout.createSequentialGroup()
                                .addGap(176, 176, 176)
                                .addComponent(btnAtenderTicket))
                            .addGroup(TabPendientesLayout.createSequentialGroup()
                                .addGap(80, 80, 80)
                                .addComponent(PanelDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(197, Short.MAX_VALUE))
        );
        TabPendientesLayout.setVerticalGroup(
            TabPendientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TabPendientesLayout.createSequentialGroup()
                .addGroup(TabPendientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TabPendientesLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(PanelDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAtenderTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(TabPendientesLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(97, 97, 97)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TabbedPaneCliente.addTab("Pendientes", TabPendientes);

        TabAtendiendo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        TabAtendiendo.setMaximumSize(new java.awt.Dimension(748, 372));
        TabAtendiendo.setMinimumSize(new java.awt.Dimension(748, 372));

        PanelFormAtendiendo.setBackground(new java.awt.Color(255, 255, 255));

        labelTicketId.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labelTicketId.setText("Ticket id: ");

        txtTicketId.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTicketId.setText("#Ticket");

        labelClienteId.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labelClienteId.setText("Cliente Id: ");

        txtClienteId.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtClienteId.setText("#Cliente");

        labelAsunto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labelAsunto.setText("Asunto: ");

        labelIngreso.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labelIngreso.setText("Ingreso del Ticket: ");

        txtFechaIngreso.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtFechaIngreso.setText("Fecha_Ingreso");

        labelAtencion.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labelAtencion.setText("Ingreso de atención del Ticket: ");

        txtFechaAtencion.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtFechaAtencion.setText("Fecha_Atencion");

        txtAsunto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtAsunto.setText("Agregar Asunto");

        btnLiberar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnLiberar.setText("Liberar Ticket");
        btnLiberar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLiberarActionPerformed(evt);
            }
        });

        btnResuelto.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnResuelto.setText("Ticket Resuelto");
        btnResuelto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResueltoActionPerformed(evt);
            }
        });

        TextAreaComentario.setColumns(20);
        TextAreaComentario.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        TextAreaComentario.setRows(5);
        jScrollPane1.setViewportView(TextAreaComentario);

        labelComentario.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        labelComentario.setText("Comentario");

        javax.swing.GroupLayout PanelFormAtendiendoLayout = new javax.swing.GroupLayout(PanelFormAtendiendo);
        PanelFormAtendiendo.setLayout(PanelFormAtendiendoLayout);
        PanelFormAtendiendoLayout.setHorizontalGroup(
            PanelFormAtendiendoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelFormAtendiendoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelFormAtendiendoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelFormAtendiendoLayout.createSequentialGroup()
                        .addComponent(labelAsunto, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtAsunto, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelFormAtendiendoLayout.createSequentialGroup()
                        .addComponent(labelAtencion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFechaAtencion, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelFormAtendiendoLayout.createSequentialGroup()
                        .addComponent(labelIngreso)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelFormAtendiendoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelFormAtendiendoLayout.createSequentialGroup()
                            .addComponent(labelClienteId, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtClienteId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(PanelFormAtendiendoLayout.createSequentialGroup()
                            .addComponent(labelTicketId, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtTicketId, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PanelFormAtendiendoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelFormAtendiendoLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(131, 131, 131))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelFormAtendiendoLayout.createSequentialGroup()
                        .addComponent(labelComentario)
                        .addGap(310, 310, 310))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelFormAtendiendoLayout.createSequentialGroup()
                .addContainerGap(413, Short.MAX_VALUE)
                .addComponent(btnLiberar)
                .addGap(32, 32, 32)
                .addComponent(btnResuelto)
                .addGap(296, 296, 296))
        );
        PanelFormAtendiendoLayout.setVerticalGroup(
            PanelFormAtendiendoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelFormAtendiendoLayout.createSequentialGroup()
                .addGroup(PanelFormAtendiendoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelFormAtendiendoLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(PanelFormAtendiendoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelTicketId)
                            .addComponent(txtTicketId)))
                    .addGroup(PanelFormAtendiendoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelComentario)))
                .addGroup(PanelFormAtendiendoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelFormAtendiendoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PanelFormAtendiendoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelClienteId)
                            .addComponent(txtClienteId))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PanelFormAtendiendoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelAsunto)
                            .addComponent(txtAsunto))
                        .addGap(18, 18, 18)
                        .addGroup(PanelFormAtendiendoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelIngreso)
                            .addComponent(txtFechaIngreso))
                        .addGap(18, 18, 18)
                        .addGroup(PanelFormAtendiendoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelAtencion)
                            .addComponent(txtFechaAtencion)))
                    .addGroup(PanelFormAtendiendoLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(PanelFormAtendiendoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnResuelto)
                    .addComponent(btnLiberar))
                .addContainerGap())
        );

        javax.swing.GroupLayout TabAtendiendoLayout = new javax.swing.GroupLayout(TabAtendiendo);
        TabAtendiendo.setLayout(TabAtendiendoLayout);
        TabAtendiendoLayout.setHorizontalGroup(
            TabAtendiendoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TabAtendiendoLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(PanelFormAtendiendo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        TabAtendiendoLayout.setVerticalGroup(
            TabAtendiendoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TabAtendiendoLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(PanelFormAtendiendo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        TabbedPaneCliente.addTab("Atendiendo", TabAtendiendo);

        TabReportes.setBackground(new java.awt.Color(255, 255, 255));

        labelTicketResueltos.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labelTicketResueltos.setText("Tickets Resueltos Satisfactoriamente: ");

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Tickets Resuelto Insatisfactoriamente: ");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Porcentaje de Efectividad: ");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Tiempo promedio de atención por Tickets: ");

        txtTicketsResueltos.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTicketsResueltos.setText("#Resueltos");

        txtTicketsNoResueltos.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTicketsNoResueltos.setText("#No Resueltos");

        txtTiempoPromedio.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTiempoPromedio.setText("Tiempo Promedio");

        javax.swing.GroupLayout PanelReportesLayout = new javax.swing.GroupLayout(PanelReportes);
        PanelReportes.setLayout(PanelReportesLayout);
        PanelReportesLayout.setHorizontalGroup(
            PanelReportesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 449, Short.MAX_VALUE)
        );
        PanelReportesLayout.setVerticalGroup(
            PanelReportesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 287, Short.MAX_VALUE)
        );

        ScrollPaneReportes.setViewportView(PanelReportes);

        javax.swing.GroupLayout TabReportesLayout = new javax.swing.GroupLayout(TabReportes);
        TabReportes.setLayout(TabReportesLayout);
        TabReportesLayout.setHorizontalGroup(
            TabReportesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TabReportesLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(TabReportesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TabReportesLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtTiempoPromedio))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(TabReportesLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtTicketsNoResueltos, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(TabReportesLayout.createSequentialGroup()
                        .addComponent(labelTicketResueltos)
                        .addGap(18, 18, 18)
                        .addComponent(txtTicketsResueltos, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(ScrollPaneReportes, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        TabReportesLayout.setVerticalGroup(
            TabReportesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TabReportesLayout.createSequentialGroup()
                .addGroup(TabReportesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TabReportesLayout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addGroup(TabReportesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelTicketResueltos)
                            .addComponent(txtTicketsResueltos))
                        .addGap(33, 33, 33)
                        .addGroup(TabReportesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtTicketsNoResueltos))
                        .addGap(32, 32, 32)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addGroup(TabReportesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtTiempoPromedio)))
                    .addGroup(TabReportesLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(ScrollPaneReportes, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        TabbedPaneCliente.addTab("Reportes", TabReportes);

        javax.swing.GroupLayout PanelClientesLayout = new javax.swing.GroupLayout(PanelClientes);
        PanelClientes.setLayout(PanelClientesLayout);
        PanelClientesLayout.setHorizontalGroup(
            PanelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelClientesLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(PanelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnDesconectar)
                    .addGroup(PanelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(TabbedPaneCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(PanelClientesLayout.createSequentialGroup()
                            .addComponent(labelUsuario)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelClientesLayout.setVerticalGroup(
            PanelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelUsuario)
                    .addComponent(txtNombreUsuario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDesconectar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TabbedPaneCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PanelFondoClientesLayout = new javax.swing.GroupLayout(PanelFondoClientes);
        PanelFondoClientes.setLayout(PanelFondoClientesLayout);
        PanelFondoClientesLayout.setHorizontalGroup(
            PanelFondoClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelFondoClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PanelSemaforo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelFondoClientesLayout.setVerticalGroup(
            PanelFondoClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelFondoClientesLayout.createSequentialGroup()
                .addGroup(PanelFondoClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelFondoClientesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(PanelClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelFondoClientesLayout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(PanelSemaforo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelEmcabezadoCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(PanelFondoClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelEmcabezadoCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelFondoClientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnLiberarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLiberarActionPerformed

        mensajeLiberarTicket(); 
    }//GEN-LAST:event_btnLiberarActionPerformed

    private void btnResueltoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResueltoActionPerformed
        // TODO add your handling code here:
        mensajeTicketResuelto();
    }//GEN-LAST:event_btnResueltoActionPerformed

    private void btnAtenderTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtenderTicketActionPerformed
        // Boton en el que el usuario solicita reservar un ticket para ser atendido
        String usuario = txtNombreUsuario.getText();
        String ticket = txtPendienteIdTicket.getText();
        mensajeTicketEnAtencion(ticket,usuario); //Mensaje de confirmacion.
        //ControladorCliente.peticionReservarTicket(usuario, ticket);
    }//GEN-LAST:event_btnAtenderTicketActionPerformed

    private void btnDesconectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesconectarActionPerformed
        //Envia solicitud para abandonar la conexion con el servidor
        String idUsuario=txtNombreUsuario.getText();
        boolean ejecutar=ControladorCliente.peticionCerrarConexion(idUsuario);
        if(ejecutar){
            //Cerrar conexion
        }
    }//GEN-LAST:event_btnDesconectarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void ListaTicketsPendientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListaTicketsPendientesMouseClicked

        int seleccion = ListaTicketsPendientes.getSelectedIndex();
        if(seleccion!=-1){
            Ticket ticket = modeloTickets.getTicket(seleccion);
            txtPendienteIdTicket.setText(ticket.getIdTicket());
            txtPendienteClienteId.setText(ticket.getIdCliente());
            txtPendienteAsunto.setText(ticket.getProblema());
            txtPendienteIngreso.setText(ticket.getFechaIngreso());
            modificarEstadoSemaforo(ticket.getCategoria());
        }
    }//GEN-LAST:event_ListaTicketsPendientesMouseClicked

    private void semaforoArribaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_semaforoArribaMouseClicked
        // TODO add your handling code here:
        limpiarListaTicketsPendientes();
        modificarEstadoSemaforo("ROJO");
        consultarTickets("ROJO");
    }//GEN-LAST:event_semaforoArribaMouseClicked

    private void semaforoMedioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semaforoMedioActionPerformed
        // TODO add your handling code here:
        limpiarListaTicketsPendientes();
        modificarEstadoSemaforo("AMARILLO");
        consultarTickets("AMARILLO");
    }//GEN-LAST:event_semaforoMedioActionPerformed

    private void semaforoAbajoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semaforoAbajoActionPerformed
        // TODO add your handling code here:
        limpiarListaTicketsPendientes();
        modificarEstadoSemaforo("VERDE");
        consultarTickets("VERDE");
    }//GEN-LAST:event_semaforoAbajoActionPerformed

    /*Mensaje que confirma que el usuario desea reservar un ticket*/
    public void mensajeTicketEnAtencion(String ticket,String usuario){
        Object[] options = {"SI","NO"};
        JDialog.setDefaultLookAndFeelDecorated(true);
        int respuesta = JOptionPane.showOptionDialog(null,"Está seguro que desea atender el ticket "+ticket,"Atención",
                JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.WARNING_MESSAGE,
                null,options,options[1]);
        if(respuesta == 0){
            ControladorCliente.peticionReservarTicket(usuario, ticket);
        } 
    }
    
    /*Mensaje que se despliega si el ticket fue reservado con exito*/
    public void mensajeExitoReservarTicket(String ticket){
        JDialog.setDefaultLookAndFeelDecorated(true);
        JFrame parent = new JFrame();
        JOptionPane.showMessageDialog(parent, "El ticket "+ticket+ " ha sido reservado"); 
        eliminarTicketPendiente(ListaTicketsPendientes.getSelectedIndex());
    }
    
    /*Mensaje que pregunta si desea liberar un ticket*/
    public void mensajeLiberarTicket(){
        Object[] options = {"SI","NO"};
        JDialog.setDefaultLookAndFeelDecorated(true);
        int respuesta = JOptionPane.showOptionDialog(null,"Está seguro que desea liberar el ticket?","Atención",
                JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.WARNING_MESSAGE,
                null,options,options[1]);
        if(respuesta == 0){
           String idUsuario = txtNombreUsuario.getText();
           String idTicket=txtTicketId.getText();
           String comentario = TextAreaComentario.getText();
           String tiempo = "10s";
           boolean ejecutar=ControladorCliente.peticionLiberarTicket(idUsuario, idTicket, comentario, tiempo);
           if(ejecutar){
               JDialog.setDefaultLookAndFeelDecorated(true);
               JFrame parent = new JFrame();
               JOptionPane.showMessageDialog(parent, "El ticket "+idTicket+ " se ha vuelto a colorcar"
                       + " en la cola de pendientes");   
           }
           else{
               //Mostrar msj de error cuando no se logra LiberarTicket
           }
        }
    }
    
    /*Muestra un mensaje cuando se desea colocar un ticket como resuelto*/
    public void mensajeTicketResuelto(){
        Object[] options = {"SI","NO"};
        JDialog.setDefaultLookAndFeelDecorated(true);
        int respuesta = JOptionPane.showOptionDialog(null,"Confirmar Ticket como Resuelto","Atención",
                JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.WARNING_MESSAGE,
                null,options,options[1]);
        if(respuesta == 0){
            String idUsuario = txtNombreUsuario.getText();
            String idCliente = txtClienteId.getText();
            String Ticket = txtTicketId.getText();
            String comentario = TextAreaComentario.getText();
            String asuntoTicket = txtAsunto.getText();
            String fechaIngreso = txtFechaIngreso.getText();
            String fechaAtencion = txtFechaAtencion.getText();
            String tiempo = "10s"; //Falta calcular tiempo
            String categoria = "ROJO";//Falta asignar las categorias
            boolean ejecutar = ControladorCliente.peticionResolverTicket(idUsuario, Ticket, comentario, tiempo);
            //
            if(ejecutar){
                TicketResuelto facturaTicket = new TicketResuelto();
                facturaTicket.mostratTicketResuelto(Ticket, idUsuario, idCliente, asuntoTicket, fechaIngreso, fechaAtencion, tiempo, categoria, comentario);
                facturaTicket.show();
            }
            else{
                //Mostrar msj de error al colocar como resuelto
            }

        }
    }
    
    /*Permite actualizar la informacion de Tickets Pendientes*/
    public void consultarTickets(String COLOR){
        ControladorCliente.peticionSolicitarTicket(COLOR);
    }
    
    /*Permite actualizar la informacion de Reporte de tickets*/
    public void consultarReportes(String Usuario){
        ControladorCliente.peticionReporteTickets(Usuario);
    }
    
    public void agregarTicketPendiente(String numTicket,String problema,
        String cliente,String fechaIngreso,String categoria){
        Ticket ticket = new Ticket(numTicket,problema,cliente,fechaIngreso,categoria);
        modeloTickets.agregarTicket(ticket); 
    }
    
    public void eliminarTicketPendiente(int index){
        modeloTickets.eliminarTicket(index);
    }
    
    public void limpiarListaTicketsPendientes(){
        modeloTickets.eliminarTodosTickets();
    }
    
    public void modificarEstadoSemaforo(String categoria){
        String path;
        URL url = null;
        ImageIcon icon;
        path = "/imagenes/iconGris.png";  
        url = this.getClass().getResource(path);
        icon = new ImageIcon(url);
        semaforoArriba.setIcon(icon);
        semaforoMedio.setIcon(icon);
        semaforoAbajo.setIcon(icon);
        //
        if(null == categoria){
            path = "/imagenes/iconGris.png";
            semaforoArriba.setIcon(new ImageIcon("imagenes/iconGris.jpg"));
        }
        else switch (categoria) {
            case "VERDE":
                path = "/imagenes/iconVerde.jpg";
                url = this.getClass().getResource(path);
                icon = new ImageIcon(url);
                semaforoAbajo.setIcon(icon);
                semaforoAbajo.repaint();
                break;
            case "AMARILLO":
                path = "/imagenes/iconAmarillo.jpg"; 
                url = this.getClass().getResource(path);
                icon = new ImageIcon(url);
                semaforoMedio.setIcon(icon);
                semaforoMedio.repaint();
                break;
            default:
                path = "/imagenes/iconRojo.jpg";  
                url = this.getClass().getResource(path);
                icon = new ImageIcon(url);
                semaforoArriba.setIcon(icon);
                semaforoArriba.repaint();
                break;
        }
    }
    
    public void refrescarTicketAtendido(String numTicket,String idCliente,
            String asunto,String fechaIngreso,String fechaAtencion){
        txtTicketId.setText(numTicket);
        txtClienteId.setText(idCliente);
        txtAsunto.setText(asunto);
        txtFechaIngreso.setText(fechaIngreso);
        txtFechaAtencion.setText(fechaAtencion);
    }
    
    public void refrescarPanelReportes(String idTicket,String idCliente,
            String problema,String ingresoTicket,String inicioAtencion,
            String tiempo,String categoria,String comentario, String estado){
        //
        String idUsuario = txtNombreUsuario.getText();
        JLabel ticket = new javax.swing.JLabel(idTicket+": "+problema);
        PanelReportes.setLayout(new GridLayout(0,1,20,20));
        PanelReportes.add(ticket);
        PanelReportes.revalidate();
        PanelReportes.repaint();
        ticket.addMouseListener(new MouseListener(){
            @Override
            public void mouseClicked(MouseEvent e) {
                informacionReporteTicket(idTicket,idCliente,
                        problema,ingresoTicket,inicioAtencion,
                        tiempo,categoria,comentario,estado,idUsuario);
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
            
        });
        
        
    }
    
    public void informacionReporteTicket(String idTicket,String idCliente,
            String problema,String ingresoTicket,String inicioAtencion,
            String tiempo,String categoria,String comentario, String estado,String idUsuario){
        
        TicketResuelto facturaTicket = new TicketResuelto();
        facturaTicket.mostratTicketResuelto(idTicket, idUsuario, idCliente, problema, ingresoTicket, inicioAtencion, tiempo, categoria, comentario);
        facturaTicket.show();
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PanelCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PanelCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PanelCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PanelCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PanelCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Ingreso;
    private javax.swing.JList<String> ListaTicketsPendientes;
    private javax.swing.JPanel PanelClientes;
    private javax.swing.JPanel PanelDatos;
    private javax.swing.JPanel PanelFondoClientes;
    private javax.swing.JPanel PanelFormAtendiendo;
    private javax.swing.JPanel PanelReportes;
    private javax.swing.JPanel PanelSemaforo;
    private javax.swing.JScrollPane ScrollPaneReportes;
    private javax.swing.JPanel TabAtendiendo;
    private javax.swing.JPanel TabPendientes;
    private javax.swing.JPanel TabReportes;
    private javax.swing.JTabbedPane TabbedPaneCliente;
    private javax.swing.JTextArea TextAreaComentario;
    private javax.swing.JLabel asunto;
    private javax.swing.JButton btnAtenderTicket;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnDesconectar;
    private javax.swing.JButton btnLiberar;
    private javax.swing.JButton btnResuelto;
    private javax.swing.JLabel clienteId;
    private javax.swing.JLabel idTicket;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelAsunto;
    private javax.swing.JLabel labelAtencion;
    private javax.swing.JLabel labelClienteId;
    private javax.swing.JLabel labelComentario;
    private javax.swing.JLabel labelEmcabezadoCliente;
    private javax.swing.JLabel labelIngreso;
    private javax.swing.JLabel labelTicketId;
    private javax.swing.JLabel labelTicketResueltos;
    private javax.swing.JLabel labelUsuario;
    private javax.swing.JButton semaforoAbajo;
    private javax.swing.JButton semaforoArriba;
    private javax.swing.JButton semaforoMedio;
    private javax.swing.JLabel txtAsunto;
    private javax.swing.JLabel txtClienteId;
    private javax.swing.JLabel txtFechaAtencion;
    private javax.swing.JLabel txtFechaIngreso;
    private javax.swing.JLabel txtNombreUsuario;
    private javax.swing.JLabel txtPendienteAsunto;
    private javax.swing.JLabel txtPendienteClienteId;
    private javax.swing.JLabel txtPendienteIdTicket;
    private javax.swing.JLabel txtPendienteIngreso;
    private javax.swing.JLabel txtTicketId;
    private javax.swing.JLabel txtTicketsNoResueltos;
    private javax.swing.JLabel txtTicketsResueltos;
    private javax.swing.JLabel txtTiempoPromedio;
    // End of variables declaration//GEN-END:variables
}
